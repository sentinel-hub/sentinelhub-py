name: build

on:
  push:
  pull_request:  # does this double the actions on updating a pull request?
  schedule:
    - cron: '0 0 * * *'

env:
  # The only way to simulate if-else statement
  CHECKOUT_BRANCH: ${{ github.event_name == 'push' && github.ref || 'develop' }}

jobs:

  check_duplication:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v4
        with:
          concurrent_skipping: 'same_content_newer'
          skip_after_successful_duplicate: 'true'
          do_not_skip: '["pull_request", "workflow_dispatch", "schedule"]'

  check-code-black-isort-flake8:
    needs: check_duplication
    if: ${{ needs.check_duplication.outputs.should_skip != 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
        with:
          ref: ${{ env.CHECKOUT_BRANCH }}

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"
          architecture: x64

      - name: Prepare linters
        run: pip install black[jupyter] isort flake8 nbqa

      - name: Check code compliance with black
        run: black . --check --diff

      - name: Check code compliance with isort
        run: |
          isort . --check --diff
          nbqa isort . --nbqa-diff

      - name: Check code compliance with flake8
        run: |
          flake8 .
          nbqa flake8 .

  check-code-pylint-and-mypy:
    needs: check_duplication
    if: ${{ needs.check_duplication.outputs.should_skip != 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
        with:
          ref: ${{ env.CHECKOUT_BRANCH }}

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"
          architecture: x64
      
      - name: Install packages
        run: pip install -e .[AWS,DEV]
      
      - name: Run mypy
        run: mypy sentinelhub setup.py

      - name: Run pylint
        run: pylint sentinelhub

  test-on-github:
    needs: check_duplication
    if: ${{ needs.check_duplication.outputs.should_skip != 'true' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - '3.7'
          - '3.8'
          - '3.9'
          - '3.10'
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
        with:
          ref: ${{ env.CHECKOUT_BRANCH }}

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - name: Install packages
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libgdal-dev proj-bin gcc libproj-dev libspatialindex-dev libopenjp2-7
          pip install -e .[AWS,DEV]

      - name: Run full tests and code coverage
        if: matrix.python-version == '3.8'
        run: |
          sentinelhub.config \
            --sh_client_id "${{ secrets.SH_CLIENT_ID }}" \
            --sh_client_secret "${{ secrets.SH_CLIENT_SECRET }}" \
            --instance_id "${{ secrets.INSTANCE_ID }}" \
            --aws_access_key_id "${{ secrets.AWS_ACCESS_KEY_ID }}" \
            --aws_secret_access_key "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          pytest --cov --cov-report=term --cov-report=xml

      - name: Run pylint and reduced tests
        if: matrix.python-version != '3.8'
        run: |
          pytest -m "not sh_integration and not aws_integration"

      - name: Upload code coverage
        if: matrix.python-version == '3.8'
        uses: codecov/codecov-action@v2
        with:
          files: coverage.xml
          fail_ci_if_error: true
          verbose: false

  mirror-and-integration-test-on-gitlab:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Mirror + trigger CI
        uses: SvanBoxel/gitlab-mirror-and-ci-action@master
        with:
          args: "https://git.sinergise.com/eo/code/sentinelhub-py-dev/"
        env:
          GITLAB_HOSTNAME: "git.sinergise.com"
          GITLAB_USERNAME: "github-action"
          GITLAB_PASSWORD: ${{ secrets.GITLAB_PASSWORD }}
          GITLAB_PROJECT_ID: "354"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
